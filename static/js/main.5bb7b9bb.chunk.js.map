{"version":3,"sources":["../node_modules/sentiment/languages sync /^/.*/index$","Components/TextSummary.js","Components/Sentiment.js","Components/InputText.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","TextSummary","props","words","text","split","filter","word","length","chars","lines","vowels","match","consonants","spaces","className","SentimentAnalyses","mydoc","require","analyze","n","Set","negative","p","positive","score","Array","join","InputText","useState","settext","onChange","target","value","placeholder","style","backgroundColor","fontSize","rows","cols","onClick","toUpperCase","toLowerCase","prevText","slice","r","i","removeLeadingSpaces","charAt","navigator","clipboard","writeText","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","newestOnTop","rtl","pauseOnFocusLoss","toggle","darkMode","document","querySelector","modeToggle","classList","App","color","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5bb7b9bb.chunk.js","sourcesContent":["var map = {\n\t\"./en/index\": 9\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 28;","import React from \"react\";\r\nimport \"./TextSummary.css\";\r\n\r\nconst TextSummary = (props) => {\r\n  const words = props.text.split(/\\s+/).filter(word => word.length!==0).length;\r\n  const chars = props.text.split(\"\").length;\r\n  const lines = props.text.split(\"\\n\").length;\r\n  const vowels = (props.text.match(/[aeiou]/gi)||[]).length;\r\n  const consonants = (props.text.match(/[bcdfghjklmnpqrstvwxyz]/gi)||[]).length;\r\n  const spaces = props.text.split(\" \").length-1;\r\n  return (\r\n    // <div className=\"center\">\r\n      <div className=\"contain center1\">\r\n        <h3 className=\"center1\">Text Summary</h3>\r\n        <ul className=\"contain\">\r\n          <li>Number of words: {words} </li>\r\n          <li>Number of characters: {chars}</li>\r\n          <li>Number of lines: {props.text.length !== 0 ? lines : 0}</li>\r\n          <li>Number of vowels: {vowels}</li>\r\n          <li>Number of consonants: {consonants}</li>\r\n          <li>Number of spaces: {spaces}</li>\r\n        </ul>\r\n      </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default TextSummary;\r\n","import React from 'react'\r\n\r\nconst SentimentAnalyses = (props) => {\r\n    let Sentiment = require('sentiment');\r\n    let sentiment = new Sentiment();\r\n    let mydoc = sentiment.analyze(props.text);\r\n    let n = new Set(mydoc.negative);\r\n    let p = new Set(mydoc.positive);\r\n\r\n    return (\r\n        <div className=\"contain center1\">\r\n            <h3 className=\"center1\">Advanced text analysis</h3>\r\n            <ul className=\"contain\">\r\n                <li><h4>Sentimental analysis</h4> </li>\r\n                Text sentiment: {mydoc.score>0?'positive':mydoc.score<0?'negative':'neutral'}\r\n                <br />\r\n                Sentimental score: {mydoc.score}\r\n                <br />\r\n                positive words: {p.length!==0?new Array(...p).join(', '):'none'}\r\n                <br />\r\n                negative words: {n.length!==0?new Array(...n).join(', '):'none'}\r\n                <br />\r\n            </ul>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SentimentAnalyses\r\n","import React, { useState } from \"react\";\r\nimport \"./InputText.css\";\r\nimport TextSummary from \"./TextSummary\";\r\nimport SentimentAnalyses from \"./Sentiment\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst removeLeadingSpaces = (text) => {\r\n  while (text[text.length - 1] === \" \") {\r\n    text = text.slice(0, text.length - 1);\r\n  }\r\n  let r = text.split(\"\");\r\n  for (let i = 0; i < text.length; i++) {\r\n    if (r[i - 1] === \" \" && r[i] !== \" \") {\r\n      r[i] = r[i].toUpperCase();\r\n    } else {\r\n      r[i] = r[i].toLowerCase();\r\n    }\r\n  }\r\n  return r.join(\"\");\r\n};\r\n\r\nconst InputText = () => {\r\n  const [text, settext] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    // console.log(text);\r\n    settext(e.target.value);\r\n  };\r\n  const handleClear = () => {\r\n    settext(\"\");\r\n  };\r\n\r\n  const handleUpper = () => {\r\n    settext(text.toUpperCase());\r\n  };\r\n\r\n  const handleLower = () => {\r\n    settext(text.toLowerCase());\r\n  };\r\n\r\n  const handleTitle = () => {\r\n    settext((prevText) => {\r\n      const word = removeLeadingSpaces(prevText);\r\n      return word.charAt(0).toUpperCase() + word.slice(1);\r\n    });\r\n  };\r\n\r\n  const handleSpaces = () => {\r\n    settext(text.split(/\\s+/g).join(\" \"));\r\n  };\r\n\r\n  const notify = () => {\r\n    toast.success('Copied to clipboard!', {\r\n      position: \"top-right\",\r\n      autoClose: 2000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n  }\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text); \r\n    notify();\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"center\">\r\n        <textarea\r\n          onChange={handleChange}\r\n          value={text}\r\n          placeholder=\"Enter your text here\"\r\n          className=\"textarea\"\r\n          style={{ backgroundColor: \"\t#686868\", fontSize: \"20px\" }}\r\n          rows=\"10\"\r\n          cols=\"90\"\r\n        />\r\n      </div>\r\n      <br />\r\n      <div className=\"buttons\">\r\n        <button onClick={handleClear} className=\"button\">\r\n          Clear text\r\n        </button>\r\n        <button onClick={handleUpper} className=\"button\">\r\n          Upper case\r\n        </button>\r\n        <button onClick={handleLower} className=\"button\">\r\n          Lower case\r\n        </button>\r\n        <button onClick={handleTitle} className=\"button\">\r\n          Title case\r\n        </button>\r\n        <button onClick={handleSpaces} className=\"button\">\r\n          remove extra spaces\r\n        </button>\r\n        <button onClick={handleCopy} className=\"button\">\r\n          Copy to clipboard\r\n        </button>\r\n        <ToastContainer\r\nposition=\"top-right\"\r\nautoClose={5000}\r\nhideProgressBar={false}\r\nnewestOnTop\r\ncloseOnClick\r\nrtl={false}\r\npauseOnFocusLoss\r\ndraggable\r\npauseOnHover\r\n/>\r\n      </div>\r\n      <TextSummary text={text} />\r\n      <SentimentAnalyses text={text} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputText;\r\n","import './App.css';\r\nimport InputText from './Components/InputText';\r\n\r\nconst toggle = () => { \r\n  let darkMode = document.querySelector('.dark-mode');\r\n  let modeToggle = document.querySelector('.mode-toggle');\r\n  darkMode.classList.toggle('active');\r\n  modeToggle.classList.toggle('active');\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App-header\">\r\n      <div className='main'>\r\n\r\n      <div onClick={toggle} className='mode-toggle'></div>\r\n      <div className='container'>\r\n        <div className='dark-mode'></div>\r\n      </div>\r\n      </div>\r\n      <h1 style={{color: \"#cfd0ff\"}}>Text Analyzer</h1>\r\n      <InputText />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}